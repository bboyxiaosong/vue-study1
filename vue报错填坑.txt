

1 报错的那些信息


vue-demo@1.0.0 dev /Users/liqian/Downloads/vue/test-vue4/vue-demo
> webpack-dev-server --inline --progress --config build/webpack.dev.conf.js

 10% building modules 1/2 modules 1 active ...ode_modules/webpack/hot/dev-server.jsevents.js:167
      throw er; // Unhandled 'error' event
      ^

Error: getaddrinfo ENOTFOUND localhost
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:57:26)
Emitted 'error' event at:
    at GetAddrInfoReqWrap.doListen [as callback] (net.js:1457:12)
    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:57:17)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! vue-demo@1.0.0 dev: `webpack-dev-server --inline --progress --config build/webpack.dev.conf.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the vue-demo@1.0.0 dev script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/liqian/.npm/_logs/2018-11-21T08_16_23_293Z-debug.log


解决方法
1.打开hosts文件

终端执行：**sudo vim /etc/hosts**，打开hosts文件。
2.编辑hosts文件

按 **i** 进入编辑模式，如果你的hosts文件最后一行有 **0.0.0.0 account.xxx.xxx**，在这一行的上一行输入 **127.0.0.1 localhost**；没有，则在最后一行输入**127.0.0.1 localhost**。
3.保存hosts文件

按 **esc** 退出编辑模式，最后输入**:wq**，保存并退出（:（英文冒号）表示进入了底线命令模式，在底线命令模式下，q表示退出程序，w表示保存文件，所以:wq表示保存并退出，这里涉及到vim的简单使用，找度娘了解更多~）。


==========================================================

2情景
我使用vue-cli 创建项目，然后想换个地方，就把除了node_modules 以外的文件全部拷贝到另一个文件，然后传到Git上，想的重新 npm run dev 一下就可以。但是在原来位置 就是可以正常展示的，但是在新文件里面就会报错 Module build failed: Error: No PostCSS Config found in: /Users/*** ，很是尴尬。

解决
查了网上的资料说：

需要在根文件里面新建一个文件postcss.config.js ,在里面添加以下代码：

module.exports = { 
  plugins: { 
    'autoprefixer': {browsers: 'last 5 version'} 
  } 
}
1
2
3
4
5
然后npm run dev 就好了。。。
--------------------- 
作者：凌晨独舞 
来源：CSDN 
原文：https://blog.csdn.net/merciwen/article/details/79663569 
版权声明：本文为博主原创文章，转载请附上博文链接！

=====================================================================================
3.安装sass 报错

1、首先安装淘宝镜像

$ npm install -g cnpm --registry=https://registry.npm.taobao.org
2、 用cnpm重新安装一次

cnpm install node-sass --save-dev

cnpm install sass-loader --save-dev


sudo cnpm i sass-resources-loader --save-dev

在build 文件下的 webpack.base.conf.js


规则下边

 module: {
    rules

	这是要添加的代码

	{
        test: /\.sass$/,
        loaders: ["style", "css", "sass"]
      }


全局引入的话

还是在这个文件下打开  utils.js

scss: generateLoaders('sass').concat(
      {
        loader: 'sass-resources-loader',
        options: {
          resources: path.resolve(__dirname, '../src/assets/css/basic.scss')//你的路径
        }
      }
    ),

src 文件下就可以引入  asstes 下的 scss了  例如：import './assets/css/basic.scss';



这样就可以把问题解决了（^_^）
--------------------- 
作者：时间飞逝子非鱼 
来源：CSDN 
原文：https://blog.csdn.net/lgysjfs/article/details/83039906 


============================================================

4. vue 跨越坑   

在 config 文件夹下配置  proxyTable 对象里边配置 例如：

 proxyTable: {
	//-------- 需要复制的部分start
      '/api/**': {
        target: 'https://hzpwechat-test.baihejia.com',//你要跨域的url
        changeOrigin:true,
        pathRewrite:{
          '^/api': '/'
        }
      },
	//-----需要复制的部分End

    },


接下来安装vue axios
引入，全局引用
import axios from 'axios';

Vue.prototype.axios = axios;


接口也可以这样
import Api from './javascript/api.js';
Vue.prototype.api = Api;

引用的时候 直接 this.api;   this.axios;


在方法里边直接这样就ok了
	methods:{

          requestData(name){

            var self = this;
            let api = this.api.search+'?type=1&cityId=1&name='+name;
            this.axios.post(api).then(result=>{
              if(result.data.ret == 200){
                let res = result.data;
                console.log(res.data);
                if(res.data.length >0){
                  self.flag = true
                  self.list = res.data;
                }
              }
            },(err)=>{

              console.log(err);

            })
          }
         

        },
//(原文链接)https://segmentfault.com/a/1190000011715088
==========================================================================================

5。基于 vue的 插件上啦加载 例子



基于Vue的Ui框架


	饿了么公司基于vue开的的vue的Ui组件库


		Element Ui    基于vue  pc端的UI框架  


		MintUi         基于vue 移动端的ui框架



	


http://element.eleme.io/




http://mint-ui.github.io/#!/en




mintUI的使用：



	1.找官网

	2.安装   npm install mint-ui -S         -S表示  --save

	3.引入mint Ui的css 和 插件

		import Mint from 'mint-ui';

		Vue.use(Mint);


		import 'mint-ui/lib/style.css'
		

	4.看文档直接使用。




在mintUi组件上面执行事件的写法

@click.native




